name: Build AsepriteDotNet

on:
  pull_request:
    branches: [ develop, main ]
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3

      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build
        run: dotnet run --project build/MonoGame.Aseprite.Build.csproj -- --target=Default

      - name: Upload Artifacts
        run: dotnet run --project build/MonoGame.Aseprite.Build.csproj -- --target=UploadArtifacts
        env:
          ACTIONS_RUNTIME_TOKEN: ${{ env.ACTIONS_RUNTIME_TOKEN }}
          ACTIONS_RUNTIME_URL: "${{ env.ACTIONS_RUNTIME_URL }}"

  deploy-to-github:
    name: Deploy To GitHub
    needs: [ build ]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    permissions:
      packages: write
      contents: write
    steps:
    - name: Expose GitHub Runtime
      uses: crazy-max/ghaction-github-runtime@v3  
      
    - name: Clone Repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Push GitHub NuGets
      run: dotnet run --project build/MonoGame.Aseprite.Build.csproj -- --target=DeployNuGetsToGitHub
      env:
        ACTIONS_RUNTIME_TOKEN: ${{ env.ACTIONS_RUNTIME_TOKEN }}
        ACTIONS_RUNTIME_URL: "${{ env.ACTIONS_RUNTIME_URL }}"
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-to-nuget:
    name: Deploy To NuGet
    needs: [ build ]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
    permissions:
      packages: write
      contents: write
    steps:
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3
        
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Push NuGets
        run: dotnet run --project build/MonoGame.Aseprite.Build.csproj -- --target=DeployNuGets
        env:
          ACTIONS_RUNTIME_TOKEN: ${{ env.ACTIONS_RUNTIME_TOKEN }}
          ACTIONS_RUNTIME_URL: "${{ env.ACTIONS_RUNTIME_URL }}"
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
