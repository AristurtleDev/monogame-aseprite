## 4.0.2 Hotfix
- Fixed XML docs not included in NuGet leading to no intellesense. (Closes #44)
- Fixed RawTexture.Height property being internal by making it public (Closes #45)

## 4.0.3 Hotfix
- Fixed crash in `TextureAtlas.FromRaw` where loop for slices used incorrect iterator. (Closes #52)

## 4.0.4 Hotfix
- `AnimatedSprite.Update(float)` changed to `AnimatedSprite.Update(double)` (Closes #51)
- `AnimatedTilemap.Update(float)` changed to `AnimatedTilemap.Update(double)` (Closes #51)
- `AnimatedSprite.Update(double)` and `AnimatedTilemap.Update(double)` now expect the value being passed to be a representation of elapsed seconds and not elapsed milliseconds.  This is in-line with the common use case of delta time being representative of seconds elapsed and not milliseconds elapsed. (Closes #61)

## 4.0.5 Hotfix
- `Slice.Origin` value is not set property in constructor. (Closes #64)


## 4.0.6 Hotfix
- Removed package dependency on DesktopGL (Closes #66)

## 5.0.0
- Resolved issue where reversing an `AnimatedSprite` would cause an exception.
- Added `AsepriteFileReader.Read(Stream)` method to support reading Aseprite file with `TitleContainer` stream (Closes #49)
- Added new processors for the mgcb-editor when pre-processing content using the mgcb-editor. These include: 
    - Sprite Processor
    - SpriteSheet Processor
    - TextureAtlas Processor
    - Tileset Processor
    - Tilemap Processor
    - AnimatedTileMap Processor
- Support for Aseprite 1.3-rc1
    - Support for User Data for Tiles added
        - Tile User Data can only be set in Aseprite through the LUA Scripting API at this time.
    - Support for new tag "Repeat" field added.
    - Support for new `PingPongReverse` loop direction added.
    - `Animatedsprite` instances are no longer coupled to the `AnimationTag` used to create them.  The `AnimationTag` now is only used to create the `AnimatedSprite` and after creation, properties such as `AnimatedSprite.IsReversed` affect only that instance.
    - `AnimatedSprite.Speed` property added to control rate of animation speed
    - `AnimatedSprite.Play()` added.
        - `AnimatedSprite` will need to be explicitly told to play using the `AnimatedSprite.Play` method.
        - Parameter for method provided to override the loop count
## 5.0.1
- Resolved issue where MonoGame.Aseprite.dll assembly reference was required for the MonoGame.Aseprite.Content.Pipeline.dll assembly in the mgcb-editor (Closes #76)
- `TextureRegion.TryGetSlice` and `TextureRegion.TryGetSlice&lt;T&gt;` methods added (credit: @fdrobidoux)

 ## 5.1.0
- `AsepriteCel` properties were made public (thanks @SephDB)
- `AnimatedSprite` now supports setting frame both on initial play and during playback.

## 5.1.1
- Resolved issue where using Linked Cels can cause an out of bounds exception.

## 5.1.2
- Resolves issue where AsepriteFile.TryGetSlice always returned false even when slice exists


## 5.1.3-beta-1
- Added `MonoGame.Aseprite.Configuration`
    -   When set to `false` this will assume frame index gets from the `AsepriteFile` start at index 1 and not 0.

## 5.1.3-beta-2
- Removed `MonoGame.Aserpite.Configuration`
- Moved `ZeroIndexedFrames` to be property of `AsepriteFile`
- Added unit testing for `AsepriteFile.ZeroIndexedFrames` functionality

## 5.1.3-beta-3
- Added proper support for new tile rotation introduced in Aseprite 1.3

## 5.1.3
- Added `MonoGame.Aseprite.Configuration`
    -   When set to `false` this will assume frame index gets from the `AsepriteFile` start at index 1 and not 0.
- Removed `MonoGame.Aserpite.Configuration`
- Moved `ZeroIndexedFrames` to be property of `AsepriteFile`
- Added unit testing for `AsepriteFile.ZeroIndexedFrames` functionality    
- Added proper support for new tile rotation introduced in Aseprite 1.3
- Read Old Palette Chunk for Indexed mode due to Aseprite 1.3.5 file spec change
    